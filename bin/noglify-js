#! /usr/bin/env node

//
//	bin/noglifyjs
//
//	noglify-js
//
//	Concatenate JavaScript files without minifying
//	Command line tool
//
//	Author: Gabriel Oheix
//


// modules

const commander = require("commander");
const fs = require("fs");

const packagejson = require('../package.json');
const noglify = require('../src/noglify.js');


// command line

commander.version(packagejson.version)
	.option('-o, --output <file>', 'Output file (default STDOUT)')
	.option('-A, --filenames', 'Add comments lines with file names')
	.option('-N, --newlines', 'Add extra new lines')
	.arguments('[files...|STDIN]')
	.parse(process.argv);



// noglify()

process_input(process_contents);


function process_input(callback) {
	if (!commander.args.length) {
		read_stdin_content(callback);
	}
	callback(commander.args.map(read_file_content));
}

function process_contents(contents) {

	const noglified = noglify(contents, create_options(commander.filenames, commander.newlines));

	if (!commander.output) {
		return write_stdout_content(noglified);
	}
	write_file_content(commander.output, noglified);
}



// objects creation

function create_options(filenames, newlines) {
	return {
		filenames: filenames,
		newlines: newlines
	};
}

function create_obj(filename, content) {
	return {
		filename: filename,
		content: content
	};
}


// input

function read_file_content(filename) {
	return create_obj(filename, fs.readFileSync(filename, "utf8"));
}

function read_stdin_content(callback) {
	const chunks = [];
	process.stdin
		.on("data", on_data)
		.on("end", on_end)
		.setEncoding("utf8")
		.resume();

	function on_data(chunk) {
		chunks.push(chunk);
	}

	function on_end() {
		const obj = create_obj('stdin', chunks.join(''));
		callback([ obj ]);
	}
}


// output

function write_file_content(filename, content) {
	fs.writeFileSync(filename, content);
}

function write_stdout_content(content) {
	process.stdout.write(content);
}
